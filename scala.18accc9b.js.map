{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/scala/scala.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.33.0(4b1abad427e58dbedc1215d99a0902ffc885fcd4)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/scala/scala.ts\nvar conf = {\n  wordPattern: /(unary_[@~!#%^&*()\\-=+\\\\|:<>\\/?]+)|([a-zA-Z_$][\\w$]*?_=)|(`[^`]+`)|([a-zA-Z_$][\\w$]*)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar language = {\n  tokenPostfix: \".scala\",\n  keywords: [\n    \"asInstanceOf\",\n    \"catch\",\n    \"class\",\n    \"classOf\",\n    \"def\",\n    \"do\",\n    \"else\",\n    \"extends\",\n    \"finally\",\n    \"for\",\n    \"foreach\",\n    \"forSome\",\n    \"if\",\n    \"import\",\n    \"isInstanceOf\",\n    \"macro\",\n    \"match\",\n    \"new\",\n    \"object\",\n    \"package\",\n    \"return\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"type\",\n    \"until\",\n    \"val\",\n    \"var\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    \"given\",\n    \"enum\",\n    \"then\"\n  ],\n  softKeywords: [\"as\", \"export\", \"extension\", \"end\", \"derives\", \"on\"],\n  constants: [\"true\", \"false\", \"null\", \"this\", \"super\"],\n  modifiers: [\n    \"abstract\",\n    \"final\",\n    \"implicit\",\n    \"lazy\",\n    \"override\",\n    \"private\",\n    \"protected\",\n    \"sealed\"\n  ],\n  softModifiers: [\"inline\", \"opaque\", \"open\", \"transparent\", \"using\"],\n  name: /(?:[a-z_$][\\w$]*|`[^`]+`)/,\n  type: /(?:[A-Z][\\w$]*)/,\n  symbols: /[=><!~?:&|+\\-*\\/^\\\\%@#]+/,\n  digits: /\\d+(_+\\d+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  escapes: /\\\\(?:[btnfr\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  fstring_conv: /[bBhHsScCdoxXeEfgGaAt]|[Tn](?:[HIklMSLNpzZsQ]|[BbhAaCYyjmde]|[RTrDFC])/,\n  tokenizer: {\n    root: [\n      [/\\braw\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstringt\" }],\n      [/\\braw\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstring\" }],\n      [/\\bs\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstringt\" }],\n      [/\\bs\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstring\" }],\n      [/\\bf\"\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstringt\" }],\n      [/\\bf\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstring\" }],\n      [/\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringt\" }],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\n      [/0[xX](@hexdigits)[Ll]?/, \"number.hex\", \"@allowMethod\"],\n      [/(@digits)[fFdD]/, \"number.float\", \"@allowMethod\"],\n      [/(@digits)[lL]?/, \"number\", \"@allowMethod\"],\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_)\\b/, \"keyword\", \"@allowMethod\"],\n      [/\\bimport\\b/, \"keyword\", \"@import\"],\n      [/\\b(case)([ \\t]+)(class)\\b/, [\"keyword.modifier\", \"white\", \"keyword\"]],\n      [/\\bcase\\b/, \"keyword\", \"@case\"],\n      [/\\bva[lr]\\b/, \"keyword\", \"@vardef\"],\n      [\n        /\\b(def)([ \\t]+)((?:unary_)?@symbols|@name(?:_=)|@name)/,\n        [\"keyword\", \"white\", \"identifier\"]\n      ],\n      [/@name(?=[ \\t]*:(?!:))/, \"variable\"],\n      [/(\\.)(@name|@symbols)/, [\"operator\", { token: \"@rematch\", next: \"@allowMethod\" }]],\n      [/([{(])(\\s*)(@name(?=\\s*=>))/, [\"@brackets\", \"white\", \"variable\"]],\n      [\n        /@name/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@softKeywords\": \"keyword\",\n            \"@modifiers\": \"keyword.modifier\",\n            \"@softModifiers\": \"keyword.modifier\",\n            \"@constants\": {\n              token: \"constant\",\n              next: \"@allowMethod\"\n            },\n            \"@default\": {\n              token: \"identifier\",\n              next: \"@allowMethod\"\n            }\n          }\n        }\n      ],\n      [/@type/, \"type\", \"@allowMethod\"],\n      { include: \"@whitespace\" },\n      [/@[a-zA-Z_$][\\w$]*(?:\\.[a-zA-Z_$][\\w$]*)*/, \"annotation\"],\n      [/[{(]/, \"@brackets\"],\n      [/[})]/, \"@brackets\", \"@allowMethod\"],\n      [/\\[/, \"operator.square\"],\n      [/](?!\\s*(?:va[rl]|def|type)\\b)/, \"operator.square\", \"@allowMethod\"],\n      [/]/, \"operator.square\"],\n      [/([=-]>|<-|>:|<:|:>|<%)(?=[\\s\\w()[\\]{},\\.\"'`])/, \"keyword\"],\n      [/@symbols/, \"operator\"],\n      [/[;,\\.]/, \"delimiter\"],\n      [/'[a-zA-Z$][\\w$]*(?!')/, \"attribute.name\"],\n      [/'[^\\\\']'/, \"string\", \"@allowMethod\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", { token: \"string\", next: \"@allowMethod\" }]],\n      [/'/, \"string.invalid\"]\n    ],\n    import: [\n      [/;/, \"delimiter\", \"@pop\"],\n      [/^|$/, \"\", \"@pop\"],\n      [/[ \\t]+/, \"white\"],\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/@name|@type/, \"type\"],\n      [/[(){}]/, \"@brackets\"],\n      [/[[\\]]/, \"operator.square\"],\n      [/[\\.,]/, \"delimiter\"]\n    ],\n    allowMethod: [\n      [/^|$/, \"\", \"@pop\"],\n      [/[ \\t]+/, \"white\"],\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/(?==>[\\s\\w([{])/, \"keyword\", \"@pop\"],\n      [\n        /(@name|@symbols)(?=[ \\t]*[[({\"'`]|[ \\t]+(?:[+-]?\\.?\\d|\\w))/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword\", next: \"@pop\" },\n            \"->|<-|>:|<:|<%\": { token: \"keyword\", next: \"@pop\" },\n            \"@default\": { token: \"@rematch\", next: \"@pop\" }\n          }\n        }\n      ],\n      [\"\", \"\", \"@pop\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    case: [\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\", \"@allowMethod\"],\n      [/\\bif\\b|=>/, \"keyword\", \"@pop\"],\n      [/`[^`]+`/, \"identifier\", \"@allowMethod\"],\n      [/@name/, \"variable\", \"@allowMethod\"],\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\n      { include: \"@root\" }\n    ],\n    vardef: [\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\"],\n      [/@name/, \"variable\"],\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\n      [/=|:(?!:)/, \"operator\", \"@pop\"],\n      [/$/, \"white\", \"@pop\"],\n      { include: \"@root\" }\n    ],\n    string: [\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ]\n    ],\n    stringt: [\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\"/, \"string\"]\n    ],\n    fstring: [\n      [/@escapes/, \"string.escape\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/%%/, \"string\"],\n      [\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\n      ],\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\n      [/./, \"string\"]\n    ],\n    fstringt: [\n      [/@escapes/, \"string.escape\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/%%/, \"string\"],\n      [\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\n      ],\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\n      [/./, \"string\"]\n    ],\n    sstring: [\n      [/@escapes/, \"string.escape\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/./, \"string\"]\n    ],\n    sstringt: [\n      [/@escapes/, \"string.escape\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/./, \"string\"]\n    ],\n    interp: [[/{/, \"operator\", \"@push\"], [/}/, \"operator\", \"@pop\"], { include: \"@root\" }],\n    rawstring: [\n      [/[^\"]/, \"string\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ]\n    ],\n    rawstringt: [\n      [/[^\"]/, \"string\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\"/, \"string\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["$1e380a7e5ded87f1$export$c83be1687c028fc9","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","$1e380a7e5ded87f1$export$789c912f57fe164c","tokenPostfix","keywords","softKeywords","constants","modifiers","softModifiers","name","type","symbols","digits","hexdigits","escapes","fstring_conv","tokenizer","root","token","bracket","next","cases","include","import","allowMethod","comment","case","vardef","string","switchTo","stringt","fstring","fstringt","sstring","sstringt","interp","rawstring","rawstringt","whitespace"],"version":3,"file":"scala.18accc9b.js.map"}